
객체 (object)
: 객체는 변수에 담겨서 이름을 만들고
점 표기법과 대괄호 표기법 두 가지 방식으로 그 값에 접근할 수 있음


let codeit = {
  nameL '코드잇',
  bornYear: 2017,
  isVeryNice: true,
  worstCourse: null,
  bestCourse: {
    title: '자바스크립트 프로그래밍 기초',
    language: 'JavaScrip'
  }
};


// 객체 내부에 있는 값에 접근하는 방법

// 점 표기법 (objectName.propertyName)
: console.log (codeit.bornYear);
  객체의 프로퍼티에 접근하는 가장 간단하고 많이 사용되는 방식

* 문제점
: 따옴표를 생략할 수 없는 프로퍼티 네임으로는 접근할 수 없음
  

  ↓ 점 표기법으로 접근이 불가능한 상황

// 대괄호 표기법 (objectName['propertyName'])
: console.log (codeit['born Year']);

  대괄호와 따옴표를 작성하는 게 조금 번거롭긴 하지만
  대괄호 표기법을 사용하면
  프로퍼티 네임을 좀 더 유연하게 구성할 수 있다는 장점

- 띄어쓰기나 숫자로 시작하는 프로퍼티에 접근이 가능

- 일단 객체 이름 다음에 대괄호를 열면
  프로퍼티 네임을 문자열로 만들 수 있는 어떤 방법이든 사용할 수 있음

ex 1)
console.log (codeit['born ' + 'Year']);

ex 2)
let propertyName = 'name';
console.log (codeit[propertyName]);


// 객체 안의 객체에 접근하는 방법
: 객체 안의 객체는 특별한 방법 없이
  프로퍼티 네임을 계속 연결해서 접근하면 됨

ex 1)
console.log (codeit.bestCourse.title);

ex 2) 점 표기법으로 접근할 수 없는 경우, 대괄호 표기법을 사용
console.log (codeit.bestCourse.['title']);

=> 프로퍼티 네임의 형태에 따라서 적절한 방식을 잘 활용


// 존재하지 않는 프로퍼티에 접근하려고 할 시
: 에러가 나는 것이 아니라 undefined 값이 출력