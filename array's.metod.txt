
배열의 메소드 (Array’s method)

let members = ['쿤갈레', 'Zerrard66', '우리생각해써',
'흙토끼', 'End Miracle'];

console.log (members);

// 출력값
(5) ["쿤갈레", "Zerrard66", "우리생각해써",
"흙토끼", "End Miracle"]


### splice (startIndex, deleteCount, item)
: 배열의 양 끝부분의 요소 하나만을 다루는 경우에
  splice 메소드 사용한다면 아래와 같이 작성할 수 있음

- 배열의 첫 요소를 삭제
: members.splice(0, 1);

- 배열의 마지막 요소를 삭제
: members.splice (members.length - 1, 1);

- 배열의 첫 요소로 값 추가
: members,splice (0, 0, 'NiceCodeit');

- 배열의 마지막 요소로 값 추가
: members.splice (members.length, 0, 'HiCodeit');


그런데 이런 경우에 한해서
splice 보다 조금 더 간결하게 코드를 작성할 수 있는 메소드

- shift () : 배열의 첫 요소를 삭제
members.shift ();
console.log (members);

// 출력값
(4) ["Zerrard66", "우리생각해써", "흙토끼", "End Miracle"]

/* shift 메소드는 파라미터가 없기 때문에
members.shift 하고 메소드를 호출하면
배열의 가장 첫 요소를 삭제하고 나머지 요소들은 앞으로 밀어줌 */

- pop () : 배열의 마지막 요소를 삭제
members.pop ();
console.log (members);

// 출력값
(3) ["Zerrard66", "우리생각해써", "흙토끼"]

/* pop 메소드도 파라미터가 없기 때문에
members.pop 하고 메소드를 호출하면
배열의 가장 마지막 요소를 삭제함
마지막 요소가 삭제되는거라 순서에는 영향이 없음 */

- unshift (value) : 배열의 첫 요소로 값 추가
members.unshift ('NiceCodeit');
console.log (members);

// 출력값
(4) ["NiceCodeit", "Zerrard66", "우리생각해써", "흙토끼"]

/* 위 shift와 pop이 실행된 다음 배열에서
가장 첫 요소로 'NiceCodeit'을 추가한 다음
나머지 요소들은 뒤로 순서를 미룬걸 확인할 수 있음 
*/

- push (value) : 배열의 마지막 요소로 값 추가
members.push ('HiCodeit');
console.log (members);

// 출력값
(5) ["NiceCodeit", "Zerrard66", "우리생각해써", "흙토끼",
"HiCodeit"]



*배열 메소드 Tip

## 배열에서 특정 값 찾기 (indexOf / lastIndexOf)
: 특정값을 찾아서 해당값의 index를 알려줌

array.indexOf (item)을 하면
array배열에 item이 포함되어 있는지 확인할 수 있음

  1. 만약 포함되어 있다면, item이 있는 인덱스가 리턴됨
  2. 포함되어 있지 않다면, -1이 리턴됨
  3. 여러 번 포함되어 있으면, 처음 발견된 인덱스가 리턴됨

ex )
let brands = ['Google', 'Kakao', 'Naver', 'Kakao'];

console.log (brands.indexOf ('Kakao'));
console.log (brands.indexOf ('Daum'));

// 출력값
1
-1

비슷한 메소드로 lastIndexOf가 있는데 indexOf와 반대로 뒤에서부터 탐색함

그리하여 방금과 같은 경우에 ‘Kakao’를
lastindexOf메소드로 찾게 되면 가장 마지막에 있는 인덱스가 리턴

ex )
let brands = ['Google', 'Kakao', 'Naver', 'Kakao'];

console.log (brands.lastindexOf ('Kakao'));
console.log (brands.lastindexOf ('Daum'));

// 출력값
3
-1


## 배열에서 특정값이 있는지 확인하기 (includes)
: 그 값이 배열 안에 있는지에 대한 여부만 확인하고 싶을 때

array.includes (item)을 하게 되면 array배열에 item이
있을 경우 true를, 없을 경우 false를 리턴

ex )
`array.includes (item)`을 하게 되면 `array`배열에 `item`이

있을 경우 `true`를, 없을 경우 `false`를 리턴


## 배열 뒤집기 (reverse)
: 배열의 순서를 뒤집기

ex )
let brands = ['Google', 'Kakao', 'Naver', 'Kakao'];

console.log (brands);
brands.reverse ();
console.log (brands);

// 출력값
(4) ["Google", "Kakao", "Naver", "Kakao"]
(4) ["Kakao", "Naver", "Kakao", "Google"]


그밖에 배열이 가지고 있는 다양하고 유용한 메소드
[https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array)