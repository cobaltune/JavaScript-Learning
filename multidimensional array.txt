
다차원 배열 (multidimensional array)
: 배열의 요소에 배열이 들어가는 형태

⇒ 배열 안에 들어있는 값들의 의미보단 여러 가지 값들을 가지고
순서나 위치에 중점을 두는 정보가 필요하다면 다차원 배열을 활용


- 배열의 요소에는 특별히 제한된 자료형이 없음
- 객체의 프로퍼티 값과 같이 어떠한 값이든 모두 할당할 수 있음
- 배열 역시 베열의 요소가 될 수 있음


배열 안에 배열이 들어가게 되면 = `2차원 배열`
배열 안에 2차원 배열이 또 들어가게 되면 = `3차원 배열`


사실 다차원 배열은 그냥 요소의 모양들이 조금 특이할 뿐이지
크게 어렵거나 특별한 점은 없음

접근만 할 수 있으면 지금까지 배웠던 배열을 다루는 방법이나
배열의 메소드를 자유롭게 활용할 수 있음


// ex ) 2차원 배열
let twoDimensional = [[1, 2], [3, 4]];

// 각 요소에 접근하려면  ex) [2]
console.log (twoDimensional[0]);
console.log (twoDimensional[0][1]);

// 출력값
(2) [1, 2]
2


// ex 2)
// 냉장고 칸별로 들어있는 내용물을 표시
let myFridge = [
	['참외', '토마토', '오이', '양파'],
	['볶음멸치', '장조림', '김치'],
	['사이다', '콜라', '물', '쥬스'],
	['사과', '바나나', '청포도'],
	['얼음'],
	['찰떡아이스', '투게더', '메로나']
];

// 건물 입구에서 자주 볼 수 있는 우편함
let mailbox = [
	[101, 201, 301, 501, 601],
	[102, 202, 302, 502, 602],
	[103, 203, 303, 503, 603],
	[104, 204, 304, 504, 604],
	[105, 205, 305, 505, 605],
];

// 체스 게임을 표현할 때
let chessBoard = [
['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],
['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']
];


만약 여러 값들의 의미가 중요하다면,
배열보다는 프로퍼티를 활용할 수 있는 객체를 만드는 게 효과적

// ex )
// 냉장고 각층의 구분이 중요해서 의미를 부여하고 싶었다면
let otherFridge = {
	fridge: {
		'채소층': ['참외', '토마토', '오이', '양파'],
		'반찬층': ['볶음멸치', '장조림', '김치'],
		'음료층': ['사이다', '콜라', '물', '쥬스'],
		'과일층': ['사과', '바나나', '청포도'],
	},
	freezer: {
		'얼음층': ['얼음'],
		'아이스크림층': ['찰떡아이스', '투게더', '메로나']
	}
};