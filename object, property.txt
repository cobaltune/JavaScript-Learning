
// 객체 (object)
: 여러 가지 값을 한 번에 저장하고 싶다면 객체를 사용
  (연관된 여러 값을 하나로 묶고 싶을 때)

{
  Key: Value, // 이 한 줄이 속성 (property)
  Key: (=Property Name) Value, (=Property Value)
}

/* 객체는 중괄호 ({)를 통해서 만들고,
   중괄호 안에는 여러 가지 다양한 값들은 쉼표 (,)로 구분,
   콜론 (:)과 함께 이 값의 이름을 붙여줘야 함 */


// Key: (=Property Name)
: JavaScript가 암묵적으로 문자열로 형 변환을 해줌


** Property Name 주의사항

1. 첫 번째 글자는 반드시
   문자, 밑줄(_), 달러 기호($) 중 하나로 시작

2. 띄어쓰기 금지

3. 하이픈 (-) 금지

+) 만약에 불가피하게 이런 규칙을 벗어나는 경우에는
   반드시 따옴표로 감싸줘야 함


// Value, (=Property Value)
: 모든 자료형 (문자열, 숫자, 불린, null) 값을 사용할 수 있음


심지어 객체 안에 객체를 넣을 수도 있음

ex) {
      bestCourse: {
        title : '자바스크립트 프로그래밍 기초',
        language: 'JavaScript'
        }
    }

이런식으로 객체를 활용하면
훨씬 더 다양하고 복잡한 데이터 구조를 짤 수도 있음


typeof 연산자
: 피연산의 자료형을 문자열로 리턴해주는 연산자

console.log (typeof {
  //여기에 객체
})

= 'object'하는 문자열로 출력
= 이 값의 자료형은 object (=객체)